@{
    ViewData["Title"] = "Details";
}
<style>
    body {
        font-family: Arial, sans-serif;
    }

    .details-container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f2f2f2;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .details-title {
        font-size: 28px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 20px;
    }

    .details-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .details-label {
        font-size: 18px;
        font-weight: bold;
        margin-right: 10px;
    }

    .details-content {
        font-size: 16px;
        flex-grow: 1;
    }

    .back-button {
        border: none;
        background-color: gray;
        color: white;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .map-button {
        border: none;
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .back-button:hover,
        .map-button:hover {
            background-color: #45a049;
        }

    .button-container {
        display: flex;
        justify-content: space-between;
        margin-top: 30px;
    }
</style>

<div class="details-container">
    <h2 class="details-title">@Html.Raw(Model.Name)</h2>

    <div class="details-item">
        <span class="details-content">@Html.Raw(Model.Text)</span>
    </div>

    <div class="details-item">
        <span class="details-label">Address:</span>
        <span class="details-content">@Model.Address</span>
    </div>

    <div class="button-container">
        <button onclick="goBack()" class="back-button">Back to All</button>
        <button onclick="viewOnMaps()" class="map-button">View on Google Maps</button>
    </div>
</div>

<script>
    function goBack() {
        window.history.back();
    }

    function viewOnMaps() {
        var address = "@Uri.EscapeDataString(Model.Address)";
        var mapsUrl = "https://www.google.com/maps/search/?api=1&query=" + address;
        window.open(mapsUrl);
    }
</script>
